//
//  ProductDetailPresenter.swift
//  Dubizzle
//
//  Created Muhammad Haseeb Siddiqui on 4/4/22.
//  Copyright Â© 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Muhammad Hassan Asim
//

import UIKit

class ProductDetailPresenter: ProductDetailPresenterProtocol {

    weak private var view: ProductDetailViewProtocol?
    var interactor: ProductDetailInteractorInputProtocol?
    private let router: ProductDetailWireframeProtocol

    init(interface: ProductDetailViewProtocol, interactor: ProductDetailInteractorInputProtocol?, router: ProductDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func viewLoaded() {
        interactor?.getProductDetails()
    }
}

extension ProductDetailPresenter: ProductDetailInteractorOutputProtocol {
    
    func presentProductDetails(with entity: ProductEntity) {
        let viewModel = ProductDetailViewModel(from: entity)
        view?.displayProductDetail(with: viewModel)
    }
    
}
